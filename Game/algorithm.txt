
dx = change -5 
and from there is added onto the self. rect 

dy += vel_y (would be increasing the same amount each time)

self.rect.x += dx(same amount)  
as jumping is a y coordinate factor we could use normal dy coordinate however it wouldn't result as a smooth jumping transition
as when you jump 
the y coordinate is at a higher speed and gravity is pulling down so we use a different variable for jumpin
hence the reseason vel_y would be applied. the negative the value the higher up they coordinate goes as to
pygame functions likewise 


respawn back to position:

if self.rectbottom > 700 (off screen):
self.rect.bottom = 40
self.rect.y = 100
(respawn point)







gravity:

self.gravity = 0

self.gravity += 1 
if self.gravity > 10 
self.gravity = 10 
moevemnt_y += self.gravity 


